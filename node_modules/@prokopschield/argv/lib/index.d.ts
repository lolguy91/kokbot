export declare class Flags {
	execNode: string;
	execScript: string;
	aliases: Record<string, string>;
	named: Record<string, string>;
	namedLists: Record<string, string[]>;
	ordered: string[];
	constructor(argv: string[]);
	alias(key: string, ...aliases: string[]): this;
	get(key: string): string | undefined;
	expect<K extends string>(
		keys: K[],
		obj?: {
			[key in K]?: string;
		}
	): { [key in K]?: string | undefined };
	/** Same as .expect(), except it mutates this argv object. */
	expectMutate<K extends string>(
		keys: K[],
		obj?: {
			[key in K]?: string;
		}
	): { [key in K]?: string | undefined };
}
declare const _default: Flags;
export default _default;
