export interface ProcedureReport<IT, OT> {
	args: IT;
	output: OT;
}
export interface Procedure<IT extends Array<any>, OT> {
	(...args: IT): OT | Promise<OT>;
}
export declare class ProceduralQueue<IT extends Array<any>, OT> {
	private _callback;
	private _queue;
	private _thisArg;
	constructor(
		callback: Procedure<IT, OT>,
		error_handler?: (err: Error | unknown) => void,
		thisArg?: object
	);
	await(...args: IT): Promise<ProcedureReport<IT, OT>>;
	add(...tasks: IT[]): void;
}
export default ProceduralQueue;
