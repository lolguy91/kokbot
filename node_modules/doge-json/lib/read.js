'use strict';
var __importDefault =
	(this && this.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
const fs_polyfill_1 = __importDefault(require('./fs-polyfill'));
const path_1 = __importDefault(require('path'));
/**
 * Read and parse a JSON file
 * @param file path to file
 * @returns the object
 */
function read(file) {
	var _a;
	try {
		if (!fs_polyfill_1.default.existsSync(file)) {
			const dir = path_1.default.resolve(file, '..');
			const base = path_1.default.basename(file);
			const rd = fs_polyfill_1.default
				.readdirSync(dir)
				.filter((a) => a.includes(base));
			if (rd.length) {
				for (const filename of rd) {
					const tfile = path_1.default.resolve(dir, filename);
					const stat = fs_polyfill_1.default.statSync(tfile);
					if (!stat.isDirectory()) {
						file = tfile;
						break;
					}
				}
			}
		}
		if (fs_polyfill_1.default.existsSync(file)) {
			var data =
				((_a = fs_polyfill_1.default.readFileSync(file)) === null ||
				_a === void 0
					? void 0
					: _a.toString()) || 'null';
			try {
				data = JSON.parse(data);
			} catch (e) {}
			return data;
		} else return null;
	} catch (error) {
		return null;
	}
}
Object.defineProperties(read, {
	default: { get: () => read },
	read: { get: () => read },
});
module.exports = read;
