/// <reference types="node" />
import decode from './decode';
import { encode, normalize_object } from './normalize-and-encode';
import read from './read';
import write from './write';
import fs from './fs-polyfill';
export { encode, decode, fs, normalize_object, read, write };
declare const _default: {
	encode: typeof encode;
	decode: typeof decode;
	fs: {
		writeFileSync: (path: string, data: string) => void;
		existsSync: (path: string) => boolean;
		readFileSync: (path: string) => string | Buffer;
		readdirSync: (path: string) => string[];
		mkdirSync: (
			path: string,
			opts?:
				| {
						recursive: boolean;
				  }
				| undefined
		) => void;
		statSync: (path: string) => {
			isFile: () => boolean;
			isDirectory: () => boolean;
		};
	};
	normalize_object: typeof normalize_object;
	read: typeof read;
	write: typeof write;
};
export default _default;
