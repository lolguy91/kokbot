'use strict';
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, '__esModule', { value: true });
exports.connect = void 0;
const logger_1 = require('@lvksh/logger');
const socket_io_client_1 = require('socket.io-client');
const debug =
	(_c =
		(_b =
			(_a = global || window) === null || _a === void 0
				? void 0
				: _a.process) === null || _b === void 0
			? void 0
			: _b.env) === null || _c === void 0
		? void 0
		: _c.NODESITE_EU_CORE_DEBUG;
const endpoint =
	((_f =
		(_e =
			(_d = global || window) === null || _d === void 0
				? void 0
				: _d.process) === null || _e === void 0
			? void 0
			: _e.env) === null || _f === void 0
		? void 0
		: _f.NODESITE_EU_CORE_ENDPOINT) || `wss://nodesite.eu:20122`;
function connect(server, ...loggers) {
	var _a, _b, _c, _d, _e, _f;
	if (debug) {
		loggers.push(
			(0, logger_1.createLogger)(
				{
					received:
						((_c =
							(_b =
								(_a = global || window) === null ||
								_a === void 0
									? void 0
									: _a.process) === null || _b === void 0
								? void 0
								: _b.env) === null || _c === void 0
							? void 0
							: _c.NODESITE_EU_CORE_DEBUG_REC) ||
						'nodesite.eu -> ',
					sent:
						((_f =
							(_e =
								(_d = global || window) === null ||
								_d === void 0
									? void 0
									: _d.process) === null || _e === void 0
								? void 0
								: _e.env) === null || _f === void 0
							? void 0
							: _f.NODESITE_EU_CORE_DEBUG_SENT) ||
						'nodesite.eu <- ',
				},
				{},
				console.error
			)
		);
	}
	const socket = (0, socket_io_client_1.io)(server || endpoint);
	if (loggers.length) {
		socket.onAny((event, ...args) =>
			loggers.forEach((logger) => logger.received(event, ...args))
		);
		const emit_real = socket.emit;
		Object.assign(socket, {
			emit: (event, ...args) => {
				emit_real.call(socket, event, ...args);
				loggers.forEach((logger) => logger.sent(event, ...args));
				return socket;
			},
		});
	}
	return socket;
}
exports.connect = connect;
exports.default = connect;
if (typeof module === 'object') {
	Object.defineProperties(connect, {
		connect: { get: () => connect },
		default: { get: () => connect },
	});
	Object.assign(module, { exports: connect });
}
