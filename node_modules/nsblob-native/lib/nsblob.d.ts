/// <reference types="node" />
import type { Socket } from 'socket.io-client';
import { HashMap } from './hashmap';
export interface DirMap {
	[filename: string]: string | DirMap;
}
export declare class nsblob {
	static cache: Map<string, Buffer>;
	static cache_keys: string[];
	static gc(max_size?: number): number;
	static cache_get(hash: string): Buffer | undefined;
	static cache_put(hash: string, obj: Buffer, low_priority?: boolean): void;
	static get cache_size(): number;
	static set cache_size(max_size: number);
	static hashmap: HashMap;
	static promise_map: Map<string, Promise<string>>;
	static store(data: Buffer | string, file?: string): Promise<string>;
	static store_file(file: string, dir?: string): Promise<string>;
	static store_dir(dir: string): Promise<DirMap>;
	static fetch(desc: string): Promise<Buffer>;
	static store_to_path(
		desc: string | DirMap,
		fspath: string
	): Promise<boolean>;
	static get config(): import('doge-config').Config;
	static get socket(): Socket;
}
export default nsblob;
